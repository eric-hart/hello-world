{"version":3,"sources":["test/entity/User.spec.js"],"names":["test","beforeEach","it","client","redis","createClient","user","User","context","serial","name","deepEquals","id"],"mappings":";;;;;;;;AAAA;;AAEA;;AAEA;;AAEA;;AAEAA,aAAKC,UAAL,CAAgB,UAACC,EAAD,EAAQ;AACtB,MAAMC,MAAM,GAAGC,eAAMC,YAAN,EAAf;;AACA,MAAMC,IAAI,GAAG,IAAIC,aAAJ,CAAS;AAAEJ,IAAAA,MAAM,EAANA;AAAF,GAAT,CAAb;AACAD,EAAAA,EAAE,CAACM,OAAH,CAAWF,IAAX,GAAkBA,IAAlB;AACD,CAJD;;AAMAN,aAAKS,MAAL,CAAY,gCAAZ;AAAA;AAAA;AAAA;AAAA;AAAA,4BAA8C,iBAAOP,EAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAC5CA,YAAAA,EAAE,CAACM,OAAH,CAAWF,IAAX,CAAgBI,IAAhB,GAAuB,YAAvB;AAD4C;AAAA,mBAEzBR,EAAE,CAACM,OAAH,CAAWF,IAAX,CAAgBI,IAFS;;AAAA;AAEtCA,YAAAA,IAFsC;AAG5CR,YAAAA,EAAE,CAACS,UAAH,CAAcT,EAAE,CAACM,OAAH,CAAWF,IAAX,CAAgBI,IAA9B,EAAoC,YAApC;;AAH4C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA9C;;AAAA;AAAA;AAAA;AAAA;;AAMAV,aAAKS,MAAL,CAAY,8BAAZ;AAAA;AAAA;AAAA;AAAA;AAAA,4BAA4C,kBAAOP,EAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAC1CA,YAAAA,EAAE,CAACM,OAAH,CAAWF,IAAX,CAAgBM,EAAhB,GAAqB,CAArB;AAD0C;AAAA,mBAEzBV,EAAE,CAACM,OAAH,CAAWF,IAAX,CAAgBM,EAFS;;AAAA;AAEpCA,YAAAA,EAFoC;AAG1CV,YAAAA,EAAE,CAACS,UAAH,CAAcT,EAAE,CAACM,OAAH,CAAWF,IAAX,CAAgBM,EAA9B,EAAkC,CAAlC;;AAH0C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA5C;;AAAA;AAAA;AAAA;AAAA","sourceRoot":"/Users/crux/Templates/my-redis","sourcesContent":["import \"@babel/register\";\n\nimport test from 'ava';\n\nimport redis from 'redis';\n\nimport User from 'entity/User';\n\ntest.beforeEach((it) => {\n  const client = redis.createClient();\n  const user = new User({ client });\n  it.context.user = user;\n});\n\ntest.serial('[entity] User -> name :: spec;', async (it) => {\n  it.context.user.name = 'Paul Allen';\n  const name = await it.context.user.name;\n  it.deepEquals(it.context.user.name, 'Paul Allen');\n});\n\ntest.serial('[entity] User -> id :: spec;', async (it) => {\n  it.context.user.id = 1;\n  const id = await it.context.user.id;\n  it.deepEquals(it.context.user.id, 1);\n});\n"]}