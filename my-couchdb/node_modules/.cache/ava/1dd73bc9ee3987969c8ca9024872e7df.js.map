{"version":3,"sources":["test/entity/Users.spec.js"],"names":["test","beforeEach","it","context","users","Users","serial","put","id","entity","name","get","result","deepEqual","JSON","stringify"],"mappings":";;;;;;;;AAAA;;AAEA;;AAEA;;AAEAA,aAAKC,UAAL,CAAgB,UAACC,EAAD,EAAQ;AACtBA,EAAAA,EAAE,CAACC,OAAH,CAAWC,KAAX,GAAmB,IAAIC,cAAJ,EAAnB;AACD,CAFD,E,CAIA;AACE;AACA;AAEA;AACA;AACF;AAEA;AACE;AACA;AACF;;;AAEAL,aAAKM,MAAL,CAAY,iCAAZ;AAAA;AAAA;AAAA;AAAA;AAAA,4BAA+C,iBAAOJ,EAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACvCA,EAAE,CAACC,OAAH,CAAWC,KAAX,CAAiBG,GAAjB,CAAqB;AAAEC,cAAAA,EAAE,EAAE,CAAN;AAASC,cAAAA,MAAM,EAAE;AAAEC,gBAAAA,IAAI,EAAE;AAAR;AAAjB,aAArB,CADuC;;AAAA;AAAA;AAAA,mBAGxBR,EAAE,CAACC,OAAH,CAAWC,KAAX,CAAiBO,GAAjB,CAAqB;AAAEH,cAAAA,EAAE,EAAE;AAAN,aAArB,CAHwB;;AAAA;AAGvCI,YAAAA,MAHuC;AAI7CV,YAAAA,EAAE,CAACW,SAAH,CAAaC,IAAI,CAACC,SAAL,CAAeH,MAAf,CAAb,EAAqC,oFAArC;;AAJ6C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA/C;;AAAA;AAAA;AAAA;AAAA,K,CAOA;AACE;AACF","sourceRoot":"/Users/crux/Templates/my-couchdb","sourcesContent":["import '@babel/register';\n\nimport test from 'ava';\n\nimport Users from 'entity/Users';\n\ntest.beforeEach((it) => {\n  it.context.users = new Users();\n});\n\n//test.serial('[entity] Users -> put :: spec;', async (it) => {\n  //const entity = { id: 1, name: 'Paul Allen' };\n  //it.context.users.put({ id: 1, entity });\n\n  //const result = await it.context.users.get({ id: 1 });\n  //it.deepEqual(result, '{}');\n//});\n\n//test.serial('[entity] Users -> get :: spec;', async (it) => {\n  //const result = await it.context.users.get({ id: 1 });\n  //it.deepEqual(JSON.stringify(result), '{\"_id\":\"1\",\"_rev\":\"1-0f6960d5ef82f30523638e96ea46ddd5\",\"id\":1,\"name\":\"Paul Allen\"}');\n//});\n\ntest.serial('[entity] Users -> post :: spec;', async (it) => {\n  await it.context.users.put({ id: 1, entity: { name: 'Yuki Hsu' } });\n\n  const result = await it.context.users.get({ id: 1 });\n  it.deepEqual(JSON.stringify(result), '{\"_id\":\"1\",\"_rev\":\"1-0f6960d5ef82f30523638e96ea46ddd5\",\"id\":1,\"name\":\"Paul Allen\"}');\n});\n\n//test.serial('[entity] Users -> delete :: spec;', async (it) => {\n  //it.context.users.delete({ id: 1 });\n//});\n"]}