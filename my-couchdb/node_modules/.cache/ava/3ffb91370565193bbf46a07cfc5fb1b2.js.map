{"version":3,"sources":["test/entity/Users.spec.js"],"names":["test","beforeEach","it","context","users","Users","serial","entity","id","name","put"],"mappings":";;;;AAAA;;AAEA;;AAEA;;AAEAA,aAAKC,UAAL,CAAgB,UAACC,EAAD,EAAQ;AACtBA,EAAAA,EAAE,CAACC,OAAH,CAAWC,KAAX,GAAmB,IAAIC,cAAJ,EAAnB;AACD,CAFD;;AAIAL,aAAKM,MAAL,CAAY,gCAAZ,EAA8C,UAAAJ,EAAE,EAAI;AAClD,MAAMK,MAAM,GAAG;AAAEC,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,IAAI,EAAE;AAAf,GAAf;AACAP,EAAAA,EAAE,CAACC,OAAH,CAAWC,KAAX,CAAiBM,GAAjB,CAAqB;AAAEF,IAAAA,EAAE,EAAE,CAAN;AAASD,IAAAA,MAAM,EAANA;AAAT,GAArB;AACD,CAHD,E,CAKA;AACA;AAEA;AACA;AAEA;AACA","sourceRoot":"/Users/crux/Templates/my-couchdb","sourcesContent":["import '@babel/register';\n\nimport test from 'ava';\n\nimport Users from 'entity/Users';\n\ntest.beforeEach((it) => {\n  it.context.users = new Users();\n});\n\ntest.serial('[entity] Users -> put :: spec;', it => {\n  const entity = { id: 1, name: 'Paul Allen' };\n  it.context.users.put({ id: 1, entity });\n});\n\n//test.serial('[entity] Users -> get :: spec;', it => {\n//});\n\n//test.serial('[entity] Users -> post :: spec;', it => {\n//});\n\n//test.serial('[entity] Users -> delete :: spec;', it => {\n//});\n"]}