"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));

var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));

require("@babel/register");

var _ava = _interopRequireDefault(require("ava"));

var _Users = _interopRequireDefault(require("../../src/entity/Users"));

_ava.default.beforeEach(function (it) {
  it.context.users = new _Users.default();
}); //test.serial('[entity] Users -> put :: spec;', async (it) => {
//const entity = { id: 1, name: 'Paul Allen' };
//it.context.users.put({ id: 1, entity });
//const result = await it.context.users.get({ id: 1 });
//it.deepEqual(result, '{}');
//});
//test.serial('[entity] Users -> get :: spec;', async (it) => {
//const result = await it.context.users.get({ id: 1 });
//it.deepEqual(JSON.stringify(result), '{"_id":"1","_rev":"1-0f6960d5ef82f30523638e96ea46ddd5","id":1,"name":"Paul Allen"}');
//});


_ava.default.serial('[entity] Users -> delete :: spec;',
/*#__PURE__*/
function () {
  var _ref = (0, _asyncToGenerator2.default)(
  /*#__PURE__*/
  _regenerator.default.mark(function _callee(it) {
    var result;
    return _regenerator.default.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            it.context.users.delete({
              id: 1
            });
            _context.next = 3;
            return it.context.users.get({
              id: 1
            });

          case 3:
            result = _context.sent;
            it.deepEqual(result, '{}');

          case 5:
          case "end":
            return _context.stop();
        }
      }
    }, _callee);
  }));

  return function (_x) {
    return _ref.apply(this, arguments);
  };
}());
//# sourceMappingURL=/Users/crux/Templates/my-couchdb/node_modules/.cache/ava/9d8e4a2d7c660330f5297cadd215a17a.js.map